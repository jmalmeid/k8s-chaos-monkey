apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: k8s-chaos-monkey-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: podchaosmonkeys.testing.chaos.io
spec:
  group: testing.chaos.io
  names:
    kind: PodChaosMonkey
    listKind: PodChaosMonkeyList
    plural: podchaosmonkeys
    shortNames:
    - chaos
    singular: podchaosmonkey
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: PodChaosMonkey is the Schema for the podchaosmonkeys API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PodChaosMonkeySpec defines the desired state of PodChaosMonkey
            properties:
              conditions:
                description: Describes the rules on how chaos testing are applied to the pods. If not specified, all fields in the `PodChaosMonkeyConditions` are set to their default values.
                properties:
                  gracePeriodSeconds:
                    description: Grace period for pod termination
                    format: int64
                    type: integer
                  maxTimeRandom:
                    description: Maximum Random time in minutes between two consecutive pod evictions
                    format: int32
                    type: integer
                  minPods:
                    description: Minimal number of pods which need to be alive
                    format: int32
                    type: integer
                  minTimeRandom:
                    description: Minimal Random time in minutes between two consecutive pod evictions
                    format: int32
                    type: integer
                  minTimeRunning:
                    description: Minimal time in minutes that has to be running
                    format: int32
                    type: integer
                required:
                - maxTimeRandom
                - minTimeRandom
                - minTimeRunning
                type: object
              targetRef:
                description: TargetRef points to the controller managing the set of pods for the testing
                properties:
                  apiVersion:
                    description: API version of the target
                    type: string
                  kind:
                    description: 'Kind of the target; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'
                    type: string
                  name:
                    description: 'Name of the target; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - targetRef
            type: object
          status:
            description: PodChaosMonkeyStatus defines the observed state of PodChaosMonkey
            properties:
              lastEvictionAt:
                description: Last time the chaos monkey evicted a pod
                format: date-time
                type: string
              numberOfEvictions:
                description: Number of times the chaos monkey has been executed
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-chaos-monkey-controller-manager
  namespace: k8s-chaos-monkey-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: k8s-chaos-monkey-leader-election-role
  namespace: k8s-chaos-monkey-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: k8s-chaos-monkey-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/eviction
  verbs:
  - create
- apiGroups:
  - testing.chaos.io
  resources:
  - podchaosmonkeys
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - testing.chaos.io
  resources:
  - podchaosmonkeys/finalizers
  verbs:
  - update
- apiGroups:
  - testing.chaos.io
  resources:
  - podchaosmonkeys/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-chaos-monkey-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-chaos-monkey-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: k8s-chaos-monkey-leader-election-rolebinding
  namespace: k8s-chaos-monkey-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: k8s-chaos-monkey-leader-election-role
subjects:
- kind: ServiceAccount
  name: k8s-chaos-monkey-controller-manager
  namespace: k8s-chaos-monkey-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-chaos-monkey-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-chaos-monkey-manager-role
subjects:
- kind: ServiceAccount
  name: k8s-chaos-monkey-controller-manager
  namespace: k8s-chaos-monkey-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-chaos-monkey-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-chaos-monkey-proxy-role
subjects:
- kind: ServiceAccount
  name: k8s-chaos-monkey-controller-manager
  namespace: k8s-chaos-monkey-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: fa7944c8.chaos.io
    # leaderElectionReleaseOnCancel defines if the leader should step down volume
    # when the Manager ends. This requires the binary to immediately end when the
    # Manager is stopped, otherwise, this setting is unsafe. Setting this significantly
    # speeds up voluntary leader transitions as the new leader don't have to wait
    # LeaseDuration time first.
    # In the default scaffold provided, the program ends immediately after
    # the manager stops, so would be fine to enable this option. However,
    # if you are doing or is intended to do any operation such as perform cleanups
    # after the manager stops then its usage might be unsafe.
    # leaderElectionReleaseOnCancel: true
kind: ConfigMap
metadata:
  name: k8s-chaos-monkey-manager-config
  namespace: k8s-chaos-monkey-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: k8s-chaos-monkey-controller-manager-metrics-service
  namespace: k8s-chaos-monkey-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: k8s-chaos-monkey-controller-manager
  namespace: k8s-chaos-monkey-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: jmalmeid/k8s-chaos-monkey-operator:v0.0.3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: k8s-chaos-monkey-controller-manager
      terminationGracePeriodSeconds: 10
